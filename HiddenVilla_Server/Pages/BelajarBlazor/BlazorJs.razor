@page "/blazorjs"
@inject IJSRuntime JsRuntime

<h3>BlazorJs</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="(()=>TestKonfirmasi(PesanKonfirmasi))">Test Confirm Button</button>
</div>
<div class="row mt-4">
    <button class="btn btn-primary" @onclick="TesSukses">Test ToastrSukses</button>
    <button class="btn btn-danger" @onclick="TesGagal">Test ToastrGagal</button>
</div>
<div class="row mt-4">
    <button class="btn btn-primary" @onclick="TesSuksesSwal">Test SwalSukses</button>
    <button class="btn btn-danger" @onclick="TesGagalSwal">Test SwalGagal</button>
</div>

<div class="row">
    @if (Konfirmasi)
    {
        <p>Terkonfirmasi</p>
    }
    else
    {
        <p>Belum Terkonfirmasi</p>
    }
</div>

@code {

    public string PesanKonfirmasi = "Yakin mau klik?";
    private bool Konfirmasi { get; set; }
    private async Task TestKonfirmasi(string message)
    {
        Konfirmasi = await JsRuntime.InvokeAsync<bool>("confirm", message);
    }

    private async Task TesSukses()
    {
        //Pesan bawaan common.js
        //await JsRuntime.InvokeVoidAsync("ShowToastr", "sukses");

        //Pesan kustom
        //await JsRuntime.InvokeVoidAsync("ShowToastr", "sukses","Telah Sukses");

        //menggunakan Runtime Helper
        await JsRuntime.ToastrSukses("Berhasil Toastr");
    }
    private async Task TesGagal()
    {
        await JsRuntime.ToastrGagal("Gagal Toastr");
    }

    private async Task TesSuksesSwal()
    {
        await JsRuntime.InvokeVoidAsync("ShowSwal", "sukses","Berhasil !");
    }
    private async Task TesGagalSwal()
    {
        await JsRuntime.InvokeVoidAsync("ShowSwal", "gagal","Terjadi Error!");
    }
}
